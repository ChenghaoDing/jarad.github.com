\documentclass[handout]{beamer}

\graphicspath{{figures/}}

\usetheme{AnnArbor}
\usecolortheme{beaver}

\setlength{\unitlength}{\textwidth}  % measure in textwidths
\usepackage[normalem]{ulem}

\setbeamertemplate{navigation symbols}{}
\setbeamertemplate{enumerate items}[default]
\setbeamertemplate{enumerate subitem}{\alph{enumii}.}
\setbeamertemplate{enumerate subsubitem}{\roman{enumiii}.}
\setkeys{Gin}{width=0.6\textwidth}

\title{Spatial - Areal models}
\author[Jarad Niemi]{Dr. Jarad Niemi}
\institute[Iowa State]{Iowa State University}
\date{\today}

\newcommand{\mG}{\mathrm{\Gamma}}
\newcommand{\I}{\mathrm{I}}
\newcommand{\mySigma}{\mathrm{\Sigma}}
\newcommand{\ind}{\stackrel{ind}{\sim}}

\begin{document}

%\section{Temp??} \begin{comment}


<<options, results='hide', echo=FALSE>>=
# These are only needed for the slides
# No need to run if you are just running the R code
opts_chunk$set(fig.width=7, 
               fig.height=5, 
               out.width='.8\\linewidth', 
               fig.align='center', 
               size='tiny',
               echo=FALSE)
options(width=100)
@

<<libraries, echo=FALSE, message=FALSE, warning=FALSE>>=
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(maps)
@

<<set_seed, echo=FALSE>>=
set.seed(2)
@

\frame{\maketitle}


\section{Areal data}
\frame{\frametitle{Choropleth}
<<cache=TRUE>>=
## R sample code for plotting choropleth polygons using "maps" package ##
## y: MN lung cancer SMR 91-98,collected by Minnesota Cancer Surveillance System ##

library(maps)

y<-c(1.14285714285714, 1.15635738831615, 1.08396946564886, 1,
1.05555555555556,
1.10810810810811, 0.894179894179894, 0.763358778625954, 1.22137404580153,
0.81578947368421, 1.13953488372093, 0.930555555555556, 1.10483870967742,
0.889502762430939, 1.23809523809524, 0.714285714285714, 0.698630136986301,
1.02136752136752, 1.0431654676259, 0.774193548387097, 0.789115646258503,
0.760416666666667, 0.711711711711712, 0.909638554216867,
0.805405405405405,
0.717948717948718, 1.07624716553288, 0.952380952380952, 1.3125,
0.978260869565217, 1.20833333333333, 0.714285714285714, 0.982456140350877,
0.751479289940828, 1.28125, 1.22857142857143, 0.88235294117647,
1.23636363636364, 1.14285714285714, 0.660194174757282, 1.20454545454545,
0.830188679245283, 0.92, 0.660377358490566, 0.783333333333333,
0.63235294117647, 0.66, 0.936170212765957, 0.862595419847328,
0.91219512195122, 0.62962962962963, 0.8, 0.722772277227723,
1.04347826086957,
0.855491329479769, 0.807142857142857, 0.852459016393443, 1.33333333333333,
0.947368421052632, 1.10256410256410, 1, 1.11717403790925,
0.909090909090909,
0.826086956521739, 0.787234042553192, 0.897727272727273, 1,
1.03333333333333,
0.895061728395062, 1.09401709401709, 0.75, 1.08577633007600,
0.888324873096447, 0.706349206349206, 0.760869565217391,
0.868852459016393,
1.02727272727273, 0.75, 1.03333333333333, 0.779411764705882,
0.858974358974359, 1.11940298507463, 1.08333333333333, 0.75,
1.04324324324324, 0.937777777777778, 0.93939393939394)


# Number of categories/shadings to be used.
n.col<-4

# Setting cutoff values for different categories.
# Note need to include min/max, thus number of cutoffs is (n.col+1).
br <- c(min(y),0.7, 1, 1.2, max(y))

# 0: dark 1: light. See "rainbow", "hsv" and "rgb" for color shadings.
shading<-gray((n.col-1):0/(n.col-1))

# Find corresponding category for each element of y.
y.grp<-findInterval(y, vec=br, rightmost.closed = TRUE, all.inside = TRUE)

# Find corresponding shading for each element of y.
y.shad<-shading[y.grp]

map("county","minnesota", fill=T, plot=T, col=y.shad, interior=T)

# Adding lengend and title.
leg.txt<-c("<0.7","0.7-1","1-1.2",">1.2")
legend(-92.25,46.5,legend=leg.txt,fill=shading,cex=1,ncol=1,bty="n")
title(main="MN Lung Cancer SMR", cex.main=2)
@
}

\frame{\frametitle{Modeling areal units}
	Let $Y_i$ represent the SMR for lung cancer in MN county $i$. \pause Consider the model defined by conditional distributions:
	\[ Y_i|y_{-i} \sim N\left(\sum_{j\in n_i} y_i/m_i, \tau^2/m_i\right) \]
	where 
	\begin{itemize}[<+->]
	\item $n_i$ indicates the neighbors of $i$
	\item $m_i$ indicates the number of neighbors for $i$
	\end{itemize}
	
	\vspace{0.2in} \pause
	
	This defines a \emph{Markov Random Field}.
}

\subsection{Brook's Lemma}
\frame{\frametitle{Brook's Lemma}
	It is clear that given $p(y_1,\ldots,y_n)$, the \emph{full conditionals}, i.e. $p(y_i|y_{-i})$, are determined. \pause 
	
	\vspace{0.2in} \pause 
	
	\begin{definition}
	\alert{Brook's Lemma} states that 
	\[ \frac{p(y_1,\ldots,y_n)}{p(y_1',\ldots,y_n')} = \frac{p(y_1|y_2,\ldots,y_n)}{p(y_1'|y_2,\ldots,y_n)} \cdot \frac{p(y_2|y_1',y_3,\ldots,y_n)}{p(y_2'|y_1',y_3,\ldots,y_n)}\cdots \frac{p(y_n|y_1',\ldots,y_{n-1}')}{p(y_n'|y_1',\ldots,y_{n-1}')} \]
	for all $(y_1',\ldots,y_n')$. 
	\end{definition}
	
	\vspace{0.2in} \pause
	
	If 
	{\tiny
	\[ p(y_1',\ldots,y_n') = \int \frac{p(y_1|y_2,\ldots,y_n)}{p(y_1'|y_2,\ldots,y_n)} \cdot \frac{p(y_2|y_1',y_3,\ldots,y_n)}{p(y_2'|y_1',y_3,\ldots,y_n)}\cdots \frac{p(y_n|y_1',\ldots,y_{n-1}')}{p(y_n'|y_1',\ldots,y_{n-1}')} dy_1,\ldots,dy_n < \infty \]
	}
	then $p(y_1,\ldots,y_n)$ is a proper joint distribution.
}

\subsection{Conditionally autoregressive models}
\frame{\frametitle{Conditionally autoregressive models}
	More generally, we can consider 
	\[ Y_i|y_{-i} \sim N\left(\sum_{j\ne i} b_{ij}y_j, \tau_i^2\right) \]
	Through Brook's Lemma, we have 
	\[ p(y_1,\ldots,y_n) \propto \exp\left( -\frac{1}{2} y^\top D^{-1}[\mathrm{I}-B]y \right) \]
	where 
	\begin{itemize}
	\item $B$ has elements $b_{ij}$
	\item $D$ is diagonal with elements $\tau_i^2$
	\end{itemize}
	
	\vspace{0.2in} \pause
	
	In order for $D^{-1}[\mathrm{I}-B]$, we need $\frac{b_{ij}}{\tau_i^2} = \frac{b_{ji}}{\tau_j^2}$ for all $i,j$.
}

\subsection{Proximity matrix}
\frame{\frametitle{Proximity matrix}
	\begin{definition}
	A \alert{proximity matrix} is a an $n\times n$ matrix, W, with elements 
	\begin{itemize}[<+->]
	\item $w_{ii}=0$ and 
	\item $w_{ij}$ representing the ``distance'' between unit $i$ and unit $j$
	\end{itemize}
	\end{definition}
	
	\vspace{0.2in} \pause 
	
	Common choices for $w_{ij}$ are 
	\begin{itemize}[<+->]
	\item 1 if $i$ is a neighbor of $j$ and 0 otherwise
		\begin{itemize}
		\item neighbors defined by those who share an edge
		\item neighbors defined by those who share a point
		\item neighbors defined by those who are within distance $\delta$
		\item $K$-nearest neighbors
		\end{itemize}
	\item ``distance'' 
		\begin{itemize}
		\item inverse intercentroidal distance
		\item inverse minimum distance plus c
		\end{itemize}
	\end{itemize}
}	

\frame{\frametitle{Intrinsicially autoregressive model}
	Recall 
	\[ p(y_1,\ldots,y_n) \propto \exp\left( -\frac{1}{2} y^\top D^{-1}[\mathrm{I}-B]y \right) \]
	\pause if we set $b_{ij} = w_{ij}/w_{i+}$ and $\tau_i^2=\tau^2/w_{i+}$, \pause we have 
	\[ p(y_1,\ldots,y_n) \propto \exp\left( -\frac{1}{2\tau^2} y^\top [D_w-W]y \right) \]
	\pause where 
	\begin{itemize}[<+->]
	\item $W$ is our proximity matrix and 
	\item $D_w$ has diagonal elements $w_{i+}$
	\end{itemize}
	
	\vspace{0.2in} \pause 
	
	This can be rewritten as 
	\[ p(y_1,\ldots,y_n) \propto \exp\left( -\frac{1}{2\tau^2} \sum_{i\ne j} w_{ij}(y_i-y_j)^2 \right) \]
	\pause This is called the \emph{intrinsically autoregressive} model.
}


\subsection{Proper CAR models}
\frame{\frametitle{Proper CAR models}
	To make this proper, 
	\[ p(y_1,\ldots,y_n) \propto \exp\left( -\frac{1}{2\tau^2} y^\top [D_w-\rho W]y \right) \]
	with 
	\begin{itemize}[<+->]
	\item $\rho \in (1/\lambda_{(1)}, 1/\lambda_{(n)})$ where
	\item $\lambda_{(1)} < \cdots < \lambda_{(n)}$ are the ordered eigenvalues of $D_w^{-1/2}WD_w^{-1/2}$. 
	\end{itemize}
	
	\vspace{0.2in} \pause
	
	The full conditionals are 
	\[ Y_i|y_{-i} \sim N\left( \rho \sum_{j\ne i} w_{ij}y_j/w_{i+}, \tau^2/w_{i+}\right) \]
	\pause a reasonable prior for $\rho$ should put most of its mass near 1. 
}

\frame{\frametitle{Dealing with $\rho$}
	\begin{itemize}[<+->]
	\item Choose $\rho$ so the CAR model is proper
	\item Choose $\rho=1$ (improper IAR model) and constrain $\sum_{i=1}^n Y_i=0$
	\item Choose $\rho=1$ and estimate a mean (remove mean from the fixed effect)
	\item Let $\rho\sim Be(18,2)$ (Banerjee pg 164) and estimate it.
	\end{itemize}
}


\subsection{Random effect model}
\frame{\frametitle{CAR as a model for random effects}
	Let 
	\begin{itemize}[<+->]
	\item $Y_i$ represent the (continuous) response for observation $i$
	\item $X_i$ represent explanatory variables for observation $i$
	\item $s[i]$ represent the areal unit for observation $i$
	\end{itemize}
	\pause then a possible model is 
	\[ Y_i = X_i^\top \beta + \phi_{s[i]} + \epsilon_i \]
	\pause  where 
	\begin{itemize}[<+->]
	\item $\epsilon_i\stackrel{ind}{\sim} N(0,\sigma^2)$ is noise
	\item $\phi_s$ is the spatial random effect associated with areal unit $s$, e.g. 
	\end{itemize}
 \pause 
	 
	\[ p(\phi_1,\ldots,\phi_S) \propto \exp\left( -\frac{1}{2\tau^2} \phi^\top [D_w-\rho W]\phi \right) \]
}


\subsection{GLMs}
\frame{\frametitle{GLMs with spatial random effects}\pause
	Let 
	\begin{itemize}[<+->]
	\item $Y_i$ represent the response for observation $i$
	\item $X_i$ represent explanatory variables for observation $i$
	\item $s[i]$ represent the areal unit for observation $i$
	\end{itemize}
	
	\vspace{0.2in} \pause
	
	Then a GLM model incorporating spatial random effects has a
	\begin{itemize}[<+->]
	\item probability distribution from an exponential family,
	\item link function $g$ such that $E[Y_i]=\mu_i=g^{-1}(\eta_i)$, and
	\item linear predictor $\eta_i=X_i^{\top} \beta+\phi_{s[i]}$.
	\end{itemize}	

	\vspace{0.2in} \pause
	
	For example,
	\begin{itemize}[<+->]
	\item $Y_i\stackrel{ind}{\sim} Ber(p_i)$ with $p_i=\mathrm{\Phi}^{-1}(X_i^\top \beta + \phi_{s[i]})$ 
	\item $Y_i \stackrel{ind}{\sim} Po(\lambda_i)$ with $\lambda_i = \exp(X_i^\top\beta +\phi_{s[i]})$
	\end{itemize}
}


\section{Example}
\begin{frame}[fragile]
<<echo=TRUE>>=
library(CARBayes)
library(plyr)


#### Set up a square lattice region
x.easting <- 1:10
x.northing <- 1:10
Grid <- expand.grid(x.easting, x.northing)
n <- nrow(Grid)

#### set up distance and neighbourhood (W, based on sharing a common border) matrices
distance <-array(0, c(n,n))
W <-array(0, c(n,n))
	for(i in 1:n)
	{
		for(j in 1:n)
		{
		temp <- (Grid[i,1] - Grid[j,1])^2 + (Grid[i,2] - Grid[j,2])^2
		distance[i,j] <- sqrt(temp)
			if(temp==1)  W[i,j] <- 1 
		}	
	}
	
	
#### Generate the covariates and response data
x1 <- rnorm(n)
x2 <- rnorm(n)
theta <- rnorm(n, sd=0.05)
phi <- mvrnorm(n=1, mu=rep(0,n), Sigma=0.4 * exp(-0.1 * distance))
fitted <- -0.2 +  0.1 * x1 + 1*x2 + theta + phi
Y <- rnorm(n=n, mean=fitted, sd=rep(.1,n))

par(mfrow=c(2,2))
image(x.easting, x.northing, matrix(Y,10,10), main="data")
image(x.easting, x.northing, matrix(phi,10,10), main="random effect")

#### Run the proper model
#### Let the function randomly generate starting values for the parameters
#### Use the default priors specified by the function (for details see the help files)
formula <- Y ~ x1 + x2

model_proper <- gaussian.properCAR(formula=formula, W=W, burnin=5000, n.sample=10000)

dim(model_proper$samples.phi)
phi_mean = aaply(model_proper$samples.phi,2, mean)
phi_sd   = aaply(model_proper$samples.phi,2, sd)

par(mfrow=c(2,2))
image(x.easting, x.northing, matrix(Y,10,10), main="data")
image(x.easting, x.northing, matrix(phi,10,10), main="random effect")
image(x.easting, x.northing, matrix(phi_mean,10,10), main="E[random effect]")
image(x.easting, x.northing, matrix(phi_sd,10,10), main="sd(random effect)")


model_iar    <- gaussian.iarCAR(formula=formula, W=W, burnin=5000, n.sample=10000)
@
\end{frame}


\end{document}

