\documentclass[aspectratio=169,handout]{beamer}

\usepackage{verbatim,multicol,amsmath}

\input{../../frontmatter}
\input{../../commands}

\title{Sampling distribution}

\setbeamertemplate{background}
{\includegraphics[width=\paperwidth,height=\paperheight,keepaspectratio]{video_overlay}}

<<options, results='hide', echo=FALSE, purl=FALSE>>=
opts_chunk$set(comment=NA, 
               fig.width=6, fig.height=4, 
               size='tiny', 
               out.width='\\textwidth', 
               fig.align='center', 
               message=FALSE,
               echo=FALSE,
               cache=TRUE)
options(width=120)
@

<<libraries, message=FALSE, warning=FALSE, cache=FALSE>>=
library("plyr")
library("dplyr")
library("tidyr")
library("ggplot2")
@

<<set_seed, echo=FALSE>>=
set.seed(2)
@

\begin{document}

\begin{frame}
\maketitle
\end{frame}


\section{Sampling distribution}
\begin{frame}[t]
\frametitle{Sampling distribution}
The \alert{sampling distribution} of a statistic is the distribution of the 
statistic \emph{over different realizations of the data}.

\vspace{0.1in} \pause

\bc
Find the following sampling distributions:

\vspace{0.1in} 

\begin{itemize}
\item If $Y\ind N(\mu,\sigma^2)$, 
\[ 
\overline{Y}
\pause
\qquad \mbox{and} \qquad 
\pause 
\frac{\overline{Y}-\mu}{S/\sqrt{n}}.
\pause 
\] 
\item If $Y\sim Bin(n,\theta)$, 
\[ 
\frac{Y}{n}.
\]
\end{itemize}
\nc\ec
\end{frame}




\subsection{Normal model}
\begin{frame}
\frametitle{Normal model}
Let $Y_i \ind N(\mu,\sigma^2)$, then 
\[ 
\overline{Y} \sim N(\mu,\sigma^2/n). 
\]

\pause

\bc
<<normal_samples, cache = TRUE>>=
mu = 35
sigma = 5
ns = 10*(2:5)
samples = expand.grid(rep = 1:1000, 
               n = ns,
               mu = mu, 
               sigma = sigma) %>%
  dplyr::group_by(rep, n) %>%
  do(data.frame(samples = rnorm(.$n, mean = mu, sd = sigma))) 
@

<<normal_average, dependson = "normal_samples">>=
d = samples %>%
  dplyr::summarize(average = mean(samples),
                   .groups = "keep") %>%
  dplyr::mutate(n = paste("n =", n))

density = expand.grid(x = seq(from = mu-sigma, to = mu+sigma, length = 1001),
                      n = ns) %>%
  dplyr::mutate(density = dnorm(x, mean = mu, sd = sigma/sqrt(n)),
                n = paste("n =", n))
  

ggplot(d, aes(x = average)) + 
  geom_histogram(aes(y=..density..), binwidth = .1) + 
  geom_line(data = density, aes(x=x, y = density), color = "red") + 
  facet_wrap(~n, scales = "free_y") +
  labs(title = paste0("Sampling distribution for N(",mu,", ",sigma^2,") average")) +
  theme_bw()
@
\nc\ec
\end{frame}



\begin{frame}
\frametitle{Normal model}
Let $Y_i \ind N(\mu,\sigma^2)$, then the t-statistic
\[ 
T = \frac{\overline{Y}-\mu}{S/\sqrt{n}} \pause \sim t_{n-1}. 
\]

\vspace{-0.3in} \pause

\bc
<<t_statistic, dependson = "normal_samples", fig.height=3.7>>=
mu = 35
sigma = 5
ns = 10*(2:5)

d = samples %>%
  dplyr::summarize(sample_mean = mean(samples),
                   sample_sd   = sd(samples),
                   t = (sample_mean - mu)/(sample_sd/sqrt(n)),
                   n = paste("n =", n),
                   .groups = "keep")

density = expand.grid(x = seq(from = -4, to = 4, length = 1001),
                      n = ns) %>%
  dplyr::mutate(density = dt(x, df = n-1),
                n = paste("n =", n))
  

ggplot(d, aes(x = t)) + 
  geom_histogram(aes(y=..density..), binwidth = .1) + 
  geom_line(data = density, aes(x=x, y = density), color = "red") + 
  facet_wrap(~n, scales = "free_y") +
  labs(title = paste0("Sampling distribution of the t-statistic")) +
  theme_bw()
@
\nc\ec
\end{frame}


\subsection{Binomial model}
\begin{frame}
\frametitle{Binomial model}
Let $Y\sim Bin(n,p)$, then 
\[ 
P\left(\frac{Y}{n} = p\right) = P(Y = np), \pause \qquad 
p = 0,\frac{1}{n},\frac{2}{n},\ldots,\frac{n-1}{n},1.
\]

\pause
\bc
<<binomial_samples, cache = TRUE>>=
ns = c(10,100)
ps = c(.5,.8)
samples = expand.grid(rep = 1:1000, 
               n = ns,
               p = ps) %>%
  dplyr::group_by(n, p) %>%
  dplyr::mutate(y = rbinom(n(), size = n, prob = p),
                phat = y/n, 
                p = paste("p =", p),
                n = paste("n =", n)) 
@

<<binomial_proportion, dependson = "binomial_samples">>=
pmf = expand.grid(n = ns, p = ps, values = (0:max(ns))/max(ns)) %>%
  dplyr::group_by(n, p) %>%
  do(data.frame(values = (0:max(.$n))/max(.$n))) %>%
  dplyr::mutate(
    pmf = dbinom(values*n, size = n, prob = p),
    p = paste("p =", p),
    n = paste("n =", n)) %>%
  dplyr::filter(pmf > 0)
  

ggplot(samples, aes(x = phat)) + 
  geom_histogram(aes(y=..density..)) + 
  geom_point(data = pmf, aes(x=values, y = pmf), color = "red") +
  facet_grid(n~p, scales = "free_y") +
  labs(title = paste0("Sampling distribution for binomial proportion"),
       x = "Sample proportion (y/n)", 
       y = "") +
  theme_bw()
@
\nc\ec
\end{frame}

\end{document}



